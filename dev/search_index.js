var documenterSearchIndex = {"docs":
[{"location":"api.html#API-reference-1","page":"API reference","title":"API reference","text":"","category":"section"},{"location":"api.html#","page":"API reference","title":"API reference","text":"CurrentModule = DarkCurves","category":"page"},{"location":"api.html#Main-API-1","page":"API reference","title":"Main API","text":"","category":"section"},{"location":"api.html#","page":"API reference","title":"API reference","text":"curve_point_type\ncurve_scalar_type","category":"page"},{"location":"api.html#DarkCurves.curve_point_type","page":"API reference","title":"DarkCurves.curve_point_type","text":"curve_point_type(::Type{<:EllipticCurve})\n\nReturns the type of a curve point (a subtype of EllipticCurvePoint) for an object of type EllipticCurve.\n\nObjects of this type support zero(), iszero(), one(), rand(), +, -, ==, * (by a scalar type).\n\nBase point is returned by one(), and infinity point by zero().\n\n\n\n\n\n","category":"function"},{"location":"api.html#DarkCurves.curve_scalar_type","page":"API reference","title":"DarkCurves.curve_scalar_type","text":"curve_scalar_type(::Type{<:EllipticCurve})\n\nReturns the type of an associated scalar for an object of type EllipticCurve. All operations with objects of this type are done modulo curve order.\n\nObjects of this type support zero(), iszero(), one(), rand(), +, -, ==, * (by a scalar type or a point type), iseven(), isodd(), >>, inv(), divrem(), trailing_zeros(), DarkIntegers.num_bits().\n\n\n\n\n\n","category":"function"},{"location":"api.html#Abstract-types-1","page":"API reference","title":"Abstract types","text":"","category":"section"},{"location":"api.html#","page":"API reference","title":"API reference","text":"EllipticCurve\nEllipticCurvePoint","category":"page"},{"location":"api.html#DarkCurves.EllipticCurve","page":"API reference","title":"DarkCurves.EllipticCurve","text":"Abstract type for an elliptic curve \"bundle\" that includes a point type, a scalar type, and operations on them.\n\n\n\n\n\n","category":"type"},{"location":"api.html#DarkCurves.EllipticCurvePoint","page":"API reference","title":"DarkCurves.EllipticCurvePoint","text":"Abstract type of a curve point.\n\n\n\n\n\n","category":"type"},{"location":"api.html#Batch-operations-1","page":"API reference","title":"Batch operations","text":"","category":"section"},{"location":"api.html#","page":"API reference","title":"API reference","text":"lin_comb\nbatch_mul","category":"page"},{"location":"api.html#DarkCurves.lin_comb","page":"API reference","title":"DarkCurves.lin_comb","text":"Calculates a linear combination of curve points given an array of points and an array of coefficients.\n\n\n\n\n\n","category":"function"},{"location":"api.html#DarkCurves.batch_mul","page":"API reference","title":"DarkCurves.batch_mul","text":"Returns points .* coeff.\n\n\n\n\n\n","category":"function"},{"location":"api.html#Curve-implementations-1","page":"API reference","title":"Curve implementations","text":"","category":"section"},{"location":"api.html#SECP256k1-1","page":"API reference","title":"SECP256k1","text":"","category":"section"},{"location":"api.html#","page":"API reference","title":"API reference","text":"Curve_secp256k1","category":"page"},{"location":"api.html#DarkCurves.Curve_secp256k1","page":"API reference","title":"DarkCurves.Curve_secp256k1","text":"SECP256k1 curve y^2 = x^3 + 7 over the field of integers modulo 2^256 - 2^32 - 2^9 - 2^8 - 2^7 - 2^6 - 2^4 - 1 with the order (little-endian) 0xFFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE BAAEDCE6 AF48A03B BFD25E8C D0364141.\n\n\n\n\n\n","category":"type"},{"location":"history.html#Version-history-1","page":"Version history","title":"Version history","text":"","category":"section"},{"location":"history.html#v0.2.0-(18-May-2020)-1","page":"Version history","title":"v0.2.0 (18 May 2020)","text":"","category":"section"},{"location":"history.html#","page":"Version history","title":"Version history","text":"CHANGED: renamed curve_modulus() to curve_coordinate_modulus().\nCHANGED: renamed EndomorphismType4, endomorphism(), curve_endomorphism_beta(), curve_endomorphism_lambda() to EndomorphismType4Curve, curve_endomorphism_type_4(), curve_endomorphism_type_4_beta(), curve_endomorphism_type_4_lambda(), respectively.\nCHANGED: EllipticCurvePoint is now parametrized only by the curve type, but not by the coordinate type (to support custom curve point types).\nCHANGED: renamed curve_coeff_a() and curve_coeff_b() to curve_weierstrass_coeff_a() and curve_weierstrass_coeff_b().\nCHANGED: not exporting point types or coefficient functions.\nADDED: rand() for curve points.\nADDED: a single endomorphism-based multiplication method.\nADDED: wNAF-based batch mul without endomorphism.\nADDED: WeierstrassCurve abstract type subtyping EllipticCurve.\nADDED: curve_point_type() and curve_scalar_type() as main API entry points.\nADDED: StandardEllipticCurvePoint abstract type for built-in AffinePoint, JacobianPoint and ChudnovskyPoint.","category":"page"},{"location":"history.html#v0.1.1-(6-March-2020)-1","page":"Version history","title":"v0.1.1 (6 March 2020)","text":"","category":"section"},{"location":"history.html#","page":"Version history","title":"Version history","text":"ADDED: exportng EllipticCurve and EllipticCurvePoint.\nADDED: made typed curve metadata functions generated.\nADDED: endomorphism type 4 support.\nADDED: wNAF-based batch_mul().","category":"page"},{"location":"history.html#v0.1.0-(3-March-2020)-1","page":"Version history","title":"v0.1.0 (3 March 2020)","text":"","category":"section"},{"location":"history.html#","page":"Version history","title":"Version history","text":"Initial version.","category":"page"},{"location":"index.html#Elliptic-curve-toolbox-1","page":"Home","title":"Elliptic curve toolbox","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"DarkCurves.jl is a pure Julia implementation of elliptic curve arithmetic.","category":"page"}]
}
